@startuml

class BPMN {
  string defintion
}

class BPMNFeature {
  string name
  Scenario[] scenarios
}

interface Scenario {
  string name
}

class ExclusiveGatewayScenario {
  object state
  string gateway
  string expectedFlow
}

class ParallelGatewayScenario {
  object state
  string gateway
  string[] expectedFlows
}

class DMNScenario {  
  object state
  string dmn
  object expectedResult
}

class BPMNTestFactory
{
  BPMNTest Create(BPMNFeature feature)
}

class BPMNTest
{
  TestResult[] Execute()
}

interface TestResult
{
  string description  
}

interface TestScenario {
  TestResult Execute()
}


BPMN <-- BPMNFeature : references
BPMNFeature "1" *-- "many" Scenario : contains

Scenario <|.. ExclusiveGatewayScenario
Scenario <|.. ParallelGatewayScenario
Scenario <|.. DMNScenario

BPMNFeature -> BPMNTestFactory : based on
BPMNTestFactory --> BPMNTest : create
BPMNTest "1" *- "many" TestResult : has

TestResult <|.. PassTestResult
TestResult <|.. FailTestResult

BPMNTest o-- TestScenario : composite

TestScenario <|.. ExclusiveGatewayTest
TestScenario <|.. ParallelGatewayTest
TestScenario <|.. DMNTest

@enduml
